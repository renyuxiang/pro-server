<?xml version="1.0" encoding="UTF-8"?>
<!--
scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 定义日志的根目录 -->
    <!--<property name="loggingRoot" value="/win" />-->
    <!--<property  file="src/main/resources/logback.properties" />-->
    <!--<property file="classpath*:logback.properties"/>-->
    <!--<property name="loggingRoot" value="D:/log" />-->
    <!--<property name="loggingLevel" value="DEBUG" />-->
    <!--控制台-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender" >
        <!-- encoder 默认配置为PatternLayoutEncoder -->
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份)-->
    <appender name="pro" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${loggingRoot}/pro_server.log</file>
        <!--<file>/win/win_server.log</file>-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--<fileNamePattern>/win/win-%d{yyyy-MM-dd}.log</fileNamePattern>-->
            <fileNamePattern>${loggingRoot}/pro-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--<fileNamePattern>${user.dir}/craftsman/craftsman-%d{yyyy-MM-dd}.log</fileNamePattern>-->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder><!-- 必须指定，否则不会往文件输出内容 -->
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>
        </encoder>
        <append>false</append>
        <prudent>false</prudent>
    </appender>


    <logger name="com.ryx.server" level="${loggingLevel}" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="pro"/>
    </logger>


    <root level="${loggingLevel}">
        <appender-ref ref="STDOUT" />
    </root>


</configuration>